from telegram import Update
from telegram.ext import CallbackContext
from database import Database
from keyboards import Keyboards

db = Database()

class SharedHandlers:
    @staticmethod
    def start(update: Update, context: CallbackContext):
        user = update.effective_user
        user_data = db.get_user(user.id)
        
        if not user_data:
            db.add_user(user.id, user.username, user.first_name, user.last_name)
            user_data = db.get_user(user.id)
        
        if user.id in Config.ADMIN_IDS:
            db.update_user_role(user.id, 'admin')
            role = 'admin'
        else:
            role = user_data['role'] if user_data else 'pending'
        
        welcome_text = (
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n"
            "üèó –≠—Ç–æ –±–æ—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ—Ç–¥–µ–ª–∫–µ –ø–æ–º–µ—â–µ–Ω–∏–π.\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –∏ –æ–±—â–∞—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏."
        )
        
        update.message.reply_text(
            welcome_text,
            reply_markup=Keyboards.main_menu(role)
        )
    
    @staticmethod
    def help(update: Update, context: CallbackContext):
        help_text = (
            "‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n"
            "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "/message [—Ç–µ–∫—Å—Ç] - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤)\n\n"
            "üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ - —Ä–∞—Å—á–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
            "üèó –ü—Ä–æ–µ–∫—Ç—ã - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
            "üë• –†–∞–±–æ—Ç–Ω–∏–∫–∏ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\n"
            "üì¢ –†–∞—Å—Å—ã–ª–∫–∞ - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\n"
            "üì© –°–æ–æ–±—â–µ–Ω–∏—è - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
        )
        
        update.message.reply_text(help_text)
    
    @staticmethod
    def cancel(update: Update, context: CallbackContext):
        user = update.effective_user
        user_data = db.get_user(user.id)
        role = user_data['role'] if user_data else 'pending'
        
        update.message.reply_text(
            "üö´ –¢–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
            reply_markup=Keyboards.main_menu(role)
        )
        context.user_data.clear()
        return ConversationHandler.END
    
    @staticmethod
    def back_to_menu(update: Update, context: CallbackContext):
        user = update.effective_user
        user_data = db.get_user(user.id)
        role = user_data['role'] if user_data else 'pending'
        
        update.message.reply_text(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=Keyboards.main_menu(role)
        )
        context.user_data.clear()